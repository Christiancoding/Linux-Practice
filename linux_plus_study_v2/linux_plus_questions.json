{
  "metadata": {
    "title": "Linux+ Study Questions",
    "export_date": "2025-07-03T14:16:56.620627",
    "total_questions": 12,
    "categories": [
      "Commands (System Management)",
      "Concepts & Terms (Automation)",
      "Concepts & Terms (Containers)",
      "Concepts & Terms (Security)",
      "Concepts & Terms (System Management)",
      "Troubleshooting"
    ]
  },
  "questions": [
    {
      "id": 1,
      "question": "What is AppArmor?",
      "category": "Concepts & Terms (Security)",
      "options": [
        "A firewall utility",
        "A Linux kernel security module for mandatory access control based on program profiles",
        "A package manager",
        "A type of filesystem"
      ],
      "correct_answer_index": 1,
      "correct_answer_letter": "B",
      "correct_answer_text": "A Linux kernel security module for mandatory access control based on program profiles",
      "explanation": "AppArmor confines individual programs to a limited set of resources using per-program profiles, enhancing system security."
    },
    {
      "id": 2,
      "question": "A system administrator needs to obtain information about which server versions are running on open ports of a remote host. However, the administrator must avoid performing an intrusive scan that could disrupt network services. Which of the following commands should the administrator run to best meet these requirements?",
      "category": "Troubleshooting",
      "options": [
        "nmap -sV --version-light target_host",
        "nmap -A target_host",
        "nmap -sT --top-ports=10 target_host",
        "nmap --top-ports=100 -sV target_host"
      ],
      "correct_answer_index": 0,
      "correct_answer_letter": "A",
      "correct_answer_text": "nmap -sV --version-light target_host",
      "explanation": "The correct answer is nmap -sV --version-light target_host because this command line option tells Nmap to perform a service/version detection scan (-sV) using a light intensity, which is less intrusive and less likely to cause disruptions (--version-light). On the other hand, -sT performs a Connect scan that could potentially be more disruptive by completing the TCP three-way handshake; -A aggressively performs OS detection, script scanning, and traceroute, which is more intrusive; and --top-ports does not specify the intensity for version scanning and is primarily used for scanning a certain number of the most common ports."
    },
    {
      "id": 3,
      "question": "Which command is typically used on Debian-based systems to update the GRUB2 configuration file?",
      "category": "Commands (System Management)",
      "options": [
        "grub2-mkconfig",
        "grub2-install",
        "update-grub",
        "dracut"
      ],
      "correct_answer_index": 2,
      "correct_answer_letter": "C",
      "correct_answer_text": "update-grub",
      "explanation": "`update-grub` is a script commonly found on Debian-based systems (like Ubuntu) that acts as a wrapper for `grub-mkconfig -o /boot/grub/grub.cfg`. Example: `sudo update-grub`"
    },
    {
      "id": 4,
      "question": "Which command installs the GRUB2 bootloader to a specified device?",
      "category": "Commands (System Management)",
      "options": [
        "grub2-mkconfig",
        "grub2-install",
        "update-grub",
        "dracut"
      ],
      "correct_answer_index": 1,
      "correct_answer_letter": "B",
      "correct_answer_text": "grub2-install",
      "explanation": "`grub2-install` installs the GRUB2 bootloader files to the appropriate location and typically installs the boot code to the MBR or EFI partition. Example: `grub2-install /dev/sda` (for BIOS systems) or `grub2-install --target=x86_64-efi --efi-directory=/boot/efi` (for UEFI systems)."
    },
    {
      "id": 5,
      "question": "What is the purpose of the `grub2-mkconfig` command?",
      "category": "Commands (System Management)",
      "options": [
        "Install the GRUB2 bootloader",
        "Update kernel parameters",
        "Generate a GRUB2 configuration file",
        "Create an initial RAM disk"
      ],
      "correct_answer_index": 2,
      "correct_answer_letter": "C",
      "correct_answer_text": "Generate a GRUB2 configuration file",
      "explanation": "`grub2-mkconfig` scans the system for kernels and operating systems and generates a new GRUB2 configuration file (`grub.cfg`). Example: `grub2-mkconfig -o /boot/grub2/grub.cfg`"
    },
    {
      "id": 6,
      "question": "What is an AppImage?",
      "category": "Concepts & Terms (System Management)",
      "options": [
        "A kernel module",
        "A format for distributing portable Linux applications without installation",
        "A type of container image",
        "A systemd unit file"
      ],
      "correct_answer_index": 1,
      "correct_answer_letter": "B",
      "correct_answer_text": "A format for distributing portable Linux applications without installation",
      "explanation": "AppImage allows developers to package applications with all dependencies into a single file that can run on various Linux distributions without needing installation or root privileges."
    },
    {
      "id": 7,
      "question": "What does ACL stand for in Linux security?",
      "category": "Concepts & Terms (Security)",
      "options": [
        "Access Configuration Layer",
        "Advanced Control List",
        "Access Control List",
        "Allowed Command List"
      ],
      "correct_answer_index": 2,
      "correct_answer_letter": "C",
      "correct_answer_text": "Access Control List",
      "explanation": "ACL (Access Control List) provides a more flexible permission mechanism than traditional Unix permissions, allowing specific permissions for individual users or groups on a file or directory."
    },
    {
      "id": 8,
      "question": "What is Ansible primarily used for?",
      "category": "Concepts & Terms (Automation)",
      "options": [
        "Container orchestration",
        "Version control",
        "Automation (configuration management, deployment)",
        "Network monitoring"
      ],
      "correct_answer_index": 2,
      "correct_answer_letter": "C",
      "correct_answer_text": "Automation (configuration management, deployment)",
      "explanation": "Ansible is an open-source automation tool for tasks like configuration management, application deployment, task execution, and orchestration."
    },
    {
      "id": 9,
      "question": "Which command installs the GRUB2 bootloader to a specified device?",
      "category": "Commands (System Management)",
      "options": [
        "grub2-mkconfig",
        "grub2-install",
        "update-grub",
        "dracut"
      ],
      "correct_answer_index": 1,
      "correct_answer_letter": "B",
      "correct_answer_text": "grub2-install",
      "explanation": "`grub2-install` installs the GRUB2 bootloader files to the appropriate location and typically installs the boot code to the MBR or EFI partition. Example: `grub2-install /dev/sda` (for BIOS systems) or `grub2-install --target=x86_64-efi --efi-directory=/boot/efi` (for UEFI systems)."
    },
    {
      "id": 10,
      "question": "In Kubernetes, what is an Ambassador container?",
      "category": "Concepts & Terms (Containers)",
      "options": [
        "A container that monitors network traffic",
        "A container acting as an outbound proxy for external services",
        "A primary application container",
        "A container managing storage volumes"
      ],
      "correct_answer_index": 1,
      "correct_answer_letter": "B",
      "correct_answer_text": "A container acting as an outbound proxy for external services",
      "explanation": "An Ambassador container acts as a proxy within a Pod, simplifying communication between the application container(s) and external services by handling tasks like discovery, routing, or authentication."
    },
    {
      "id": 11,
      "question": "A system administrator notices that a production server is experiencing significant slowdowns. Upon further investigation using the top command, it's observed that the I/O wait percentage is consistently above 30%. Considering that the server's disk activity is not excessively high, what could be a probable cause for the high I/O wait?",
      "category": "Troubleshooting",
      "options": [
        "The hard drive is failing, causing read/write operations to take longer than usual.",
        "A misconfigured network firewall is limiting incoming connections.",
        "The I/O scheduler is configured for a single-threaded process, leading to a bottleneck.",
        "Insufficient memory available for buffer/cache leading to frequent disk access."
      ],
      "correct_answer_index": 3,
      "correct_answer_letter": "D",
      "correct_answer_text": "Insufficient memory available for buffer/cache leading to frequent disk access.",
      "explanation": "Having insufficient memory available for buffer/cache can lead to high I/O wait times because the system has to commit to disk I/O more frequently than if it had enough memory to cache operations. This leads to higher wait times as processes are queued while the I/O bottleneck is resolved. Optimizing memory usage or adding more memory can help reduce I/O wait times. A failing hard drive or misconfigured I/O scheduler may also cause increased I/O wait, but these options are less likely if disk activity is not high and the hardware was previously functioning correctly."
    },
    {
      "id": 12,
      "question": "What is the primary function of the `mkinitrd` command?",
      "category": "Commands (System Management)",
      "options": [
        "Create an initial RAM disk image used during boot",
        "Install the GRUB bootloader",
        "Configure network interfaces",
        "Manage kernel modules"
      ],
      "correct_answer_index": 0,
      "correct_answer_letter": "A",
      "correct_answer_text": "Create an initial RAM disk image used during boot",
      "explanation": "`mkinitrd` creates an initial RAM disk (initrd) image, which contains necessary drivers and utilities needed early in the Linux boot process before the root filesystem is mounted. Example: `mkinitrd /boot/initrd-$(uname -r).img $(uname -r)`"
    }
  ]
}